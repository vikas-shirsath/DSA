64. Minimum Path Sum

1 3 1       1 4 5 
1 5 1       2 7 6
4 2 1       6 0 0



class Solution {
    public:
        int minPathSum(vector<vector<int>>&grid) {
            int n = grid.size();
            int m = grid[0].size();

            vector<vector<int>> dp(n, m);

            dp[0][0] = grid[0][0];

            //Calculate result of first row
            for(int i = 1; i < m; i++) {
                dp[i] = dp[i - 1] + grid[0][i];
            }

            //calculate result of first column
            for(int i = 1; i < n; i++) {
                dp[i] = dp[i - 1] + grid[i][0];
            }

            //calculate rest of the array
            for(int i = 1; i < m; i++) {
                for(int j = 1; j < n; j++) {
                    dp[i][j] = min(dp[i-1][j], dp[i][j-1] +)
                }
            }
        }
}