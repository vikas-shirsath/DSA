Rod Cutting
Difficulty: Medium  Accuracy: 60.66%    Submissions: 182K+  Points: 4   Average Time: 20m

Given a rod of length n inches and an array price[], where price[i] denotes the value of a piece of length i. Your task is to determine the maximum value obtainable by cutting up the rod and selling the pieces.

Note: n = size of price, and price[] is 1-indexed array.

Example:

Input: price[] = [1, 5, 8, 9, 10, 17, 17, 20]
Output: 22
Explanation: The maximum obtainable value is 22 by cutting in two pieces of lengths 2 and 6, i.e., 5 + 17 = 22.

Input: price[] = [3, 5, 8, 9, 10, 17, 17, 20]
Output: 24
Explanation: The maximum obtainable value is 24 by cutting the rod into 8 pieces of length 1, i.e, 8*price[1] = 8*3 = 24.

Input: price[] = [3]
Output: 3
Explanation: There is only 1 way to pick a piece of length 1.

Constraints:
1 ≤ price.size() ≤ 103
1 ≤ price[i] ≤ 106


memoized sol

int rodCutting(int[] arr, int index, int n, int[][] dp) {
    if(index == 0) {
        return n*arr[0];
    }

    if(dp[index][n] != -1) {
        return dp[index][n];
    }

    int notCut = rodCutting(arr, index-1, n, dp);
    int cut = INT_MIN;
    int rodLength = index - 1;
    if(rodLength < n) {
        cut = arr[index] + rodCutting(arr, index, n-rodLength, dp);
    }

    dp[index][n] = max(notCut, cut);
    return dp[index][n];
}